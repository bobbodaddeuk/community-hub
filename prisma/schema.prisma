// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId    INT      @id @default(autoincrement()) @map("userId")
  email     String   @unique @map("email")
  password  String   @map("password")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  usersInfos UsersInfos?
  posts Posts[]

  @@map("Users")  
}

model Posts {
  postId    INT      @id @default(autoincrement()) @map("postId")
  usersId   INT      @map("usersId")
  title     String   @map("title")
  content   String   @map("content") @db.Text
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt)

  user Users @relation(field: [usersId], references: [usersId], onDelete: Cascade)

  @@map("Posts")
}

model UsersInfos {
  usersInfoId  INT      @id @default(autoincrement()) @map("usersInfoId)
  usersId      INT      @unique @map("usersId")
  name         String   @map("name")
  age          INT?     @map("age")
  gender       String   @map("gender")
  profileImage String?  @map("profileImage")
  createdAt    DateTime @default(now()) @map("createdAt")
  updatedAt    DateTime @updatedAt @map("updatedAt")

  user Users @relation(field: [userId], references: [userId], onDelete: Cascade)

  @@map("UsersInfos")
}

model Comments {
  commentId INT      @id @default(autoincrement()) @map("commentId")
  content   String   @map("content")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  @@map("Comments")
}
